# coding: utf-8

"""
    Slurm REST API

    API to access and control Slurm

    The version of the OpenAPI document: Slurm-24.11.5&openapi/slurmdbd&openapi/slurmctld
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.v0041_openapi_nodes_resp import V0041OpenapiNodesResp

class TestV0041OpenapiNodesResp(unittest.TestCase):
    """V0041OpenapiNodesResp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V0041OpenapiNodesResp:
        """Test V0041OpenapiNodesResp
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V0041OpenapiNodesResp`
        """
        model = V0041OpenapiNodesResp()
        if include_optional:
            return V0041OpenapiNodesResp(
                errors = [
                    openapi_client.models.v0_0_41_openapi_accounts_add_cond_resp_errors_inner.v0_0_41_openapi_accounts_add_cond_resp_errors_inner(
                        description = '', 
                        error = '', 
                        error_number = 56, 
                        source = '', )
                    ],
                last_update = openapi_client.models.v0_0_41_openapi_nodes_resp_last_update.v0_0_41_openapi_nodes_resp_last_update(
                    infinite = True, 
                    number = 56, 
                    set = True, ),
                meta = openapi_client.models.v0_0_41_openapi_accounts_add_cond_resp_meta.v0_0_41_openapi_accounts_add_cond_resp_meta(
                    client = openapi_client.models.v0_0_41_openapi_accounts_add_cond_resp_meta_client.v0_0_41_openapi_accounts_add_cond_resp_meta_client(
                        group = '', 
                        source = '', 
                        user = '', ), 
                    command = [
                        ''
                        ], 
                    plugin = openapi_client.models.v0_0_41_openapi_accounts_add_cond_resp_meta_plugin.v0_0_41_openapi_accounts_add_cond_resp_meta_plugin(
                        accounting_storage = '', 
                        data_parser = '', 
                        name = '', 
                        type = '', ), 
                    slurm = openapi_client.models.v0_0_41_openapi_accounts_add_cond_resp_meta_slurm.v0_0_41_openapi_accounts_add_cond_resp_meta_slurm(
                        cluster = '', 
                        release = '', 
                        version = openapi_client.models.v0_0_41_openapi_accounts_add_cond_resp_meta_slurm_version.v0_0_41_openapi_accounts_add_cond_resp_meta_slurm_version(
                            major = '', 
                            micro = '', 
                            minor = '', ), ), ),
                nodes = [
                    openapi_client.models.v0_0_41_openapi_nodes_resp_nodes_inner.v0_0_41_openapi_nodes_resp_nodes_inner(
                        active_features = [
                            ''
                            ], 
                        address = '', 
                        alloc_cpus = 56, 
                        alloc_idle_cpus = 56, 
                        alloc_memory = 56, 
                        architecture = '', 
                        boards = 56, 
                        boot_time = openapi_client.models.v0_0_41_openapi_nodes_resp_nodes_inner_boot_time.v0_0_41_openapi_nodes_resp_nodes_inner_boot_time(
                            infinite = True, 
                            number = 56, 
                            set = True, ), 
                        burstbuffer_network_address = '', 
                        cluster_name = '', 
                        comment = '', 
                        cores = 56, 
                        cpu_binding = 56, 
                        cpu_load = 56, 
                        cpus = 56, 
                        effective_cpus = 56, 
                        energy = openapi_client.models.v0_0_41_openapi_nodes_resp_nodes_inner_energy.v0_0_41_openapi_nodes_resp_nodes_inner_energy(
                            average_watts = 56, 
                            base_consumed_energy = 56, 
                            consumed_energy = 56, 
                            current_watts = openapi_client.models.v0_0_41_openapi_nodes_resp_nodes_inner_energy_current_watts.v0_0_41_openapi_nodes_resp_nodes_inner_energy_current_watts(
                                infinite = True, 
                                number = 56, 
                                set = True, ), 
                            last_collected = 56, 
                            previous_consumed_energy = 56, ), 
                        external_sensors = openapi_client.models.external_sensors.external_sensors(), 
                        extra = '', 
                        features = [
                            ''
                            ], 
                        free_mem = openapi_client.models.v0_0_41_openapi_nodes_resp_nodes_inner_free_mem.v0_0_41_openapi_nodes_resp_nodes_inner_free_mem(
                            infinite = True, 
                            number = 56, 
                            set = True, ), 
                        gpu_spec = '', 
                        gres = '', 
                        gres_drained = '', 
                        gres_used = '', 
                        hostname = '', 
                        instance_id = '', 
                        instance_type = '', 
                        last_busy = openapi_client.models.v0_0_41_openapi_nodes_resp_nodes_inner_last_busy.v0_0_41_openapi_nodes_resp_nodes_inner_last_busy(
                            infinite = True, 
                            number = 56, 
                            set = True, ), 
                        mcs_label = '', 
                        name = '', 
                        next_state_after_reboot = [
                            'INVALID'
                            ], 
                        operating_system = '', 
                        owner = '', 
                        partitions = [
                            ''
                            ], 
                        port = 56, 
                        power = openapi_client.models.power.power(), 
                        real_memory = 56, 
                        reason = '', 
                        reason_changed_at = openapi_client.models.v0_0_41_openapi_nodes_resp_nodes_inner_reason_changed_at.v0_0_41_openapi_nodes_resp_nodes_inner_reason_changed_at(
                            infinite = True, 
                            number = 56, 
                            set = True, ), 
                        reason_set_by_user = '', 
                        res_cores_per_gpu = 56, 
                        reservation = '', 
                        resume_after = openapi_client.models.v0_0_41_openapi_nodes_resp_nodes_inner_resume_after.v0_0_41_openapi_nodes_resp_nodes_inner_resume_after(
                            infinite = True, 
                            number = 56, 
                            set = True, ), 
                        slurmd_start_time = openapi_client.models.v0_0_41_openapi_nodes_resp_nodes_inner_slurmd_start_time.v0_0_41_openapi_nodes_resp_nodes_inner_slurmd_start_time(
                            infinite = True, 
                            number = 56, 
                            set = True, ), 
                        sockets = 56, 
                        specialized_cores = 56, 
                        specialized_cpus = '', 
                        specialized_memory = 56, 
                        state = [
                            'INVALID'
                            ], 
                        temporary_disk = 56, 
                        threads = 56, 
                        tres = '', 
                        tres_used = '', 
                        tres_weighted = 1.337, 
                        version = '', 
                        weight = 56, )
                    ],
                warnings = [
                    openapi_client.models.v0_0_41_openapi_accounts_add_cond_resp_warnings_inner.v0_0_41_openapi_accounts_add_cond_resp_warnings_inner(
                        description = '', 
                        source = '', )
                    ]
            )
        else:
            return V0041OpenapiNodesResp(
                last_update = openapi_client.models.v0_0_41_openapi_nodes_resp_last_update.v0_0_41_openapi_nodes_resp_last_update(
                    infinite = True, 
                    number = 56, 
                    set = True, ),
                nodes = [
                    openapi_client.models.v0_0_41_openapi_nodes_resp_nodes_inner.v0_0_41_openapi_nodes_resp_nodes_inner(
                        active_features = [
                            ''
                            ], 
                        address = '', 
                        alloc_cpus = 56, 
                        alloc_idle_cpus = 56, 
                        alloc_memory = 56, 
                        architecture = '', 
                        boards = 56, 
                        boot_time = openapi_client.models.v0_0_41_openapi_nodes_resp_nodes_inner_boot_time.v0_0_41_openapi_nodes_resp_nodes_inner_boot_time(
                            infinite = True, 
                            number = 56, 
                            set = True, ), 
                        burstbuffer_network_address = '', 
                        cluster_name = '', 
                        comment = '', 
                        cores = 56, 
                        cpu_binding = 56, 
                        cpu_load = 56, 
                        cpus = 56, 
                        effective_cpus = 56, 
                        energy = openapi_client.models.v0_0_41_openapi_nodes_resp_nodes_inner_energy.v0_0_41_openapi_nodes_resp_nodes_inner_energy(
                            average_watts = 56, 
                            base_consumed_energy = 56, 
                            consumed_energy = 56, 
                            current_watts = openapi_client.models.v0_0_41_openapi_nodes_resp_nodes_inner_energy_current_watts.v0_0_41_openapi_nodes_resp_nodes_inner_energy_current_watts(
                                infinite = True, 
                                number = 56, 
                                set = True, ), 
                            last_collected = 56, 
                            previous_consumed_energy = 56, ), 
                        external_sensors = openapi_client.models.external_sensors.external_sensors(), 
                        extra = '', 
                        features = [
                            ''
                            ], 
                        free_mem = openapi_client.models.v0_0_41_openapi_nodes_resp_nodes_inner_free_mem.v0_0_41_openapi_nodes_resp_nodes_inner_free_mem(
                            infinite = True, 
                            number = 56, 
                            set = True, ), 
                        gpu_spec = '', 
                        gres = '', 
                        gres_drained = '', 
                        gres_used = '', 
                        hostname = '', 
                        instance_id = '', 
                        instance_type = '', 
                        last_busy = openapi_client.models.v0_0_41_openapi_nodes_resp_nodes_inner_last_busy.v0_0_41_openapi_nodes_resp_nodes_inner_last_busy(
                            infinite = True, 
                            number = 56, 
                            set = True, ), 
                        mcs_label = '', 
                        name = '', 
                        next_state_after_reboot = [
                            'INVALID'
                            ], 
                        operating_system = '', 
                        owner = '', 
                        partitions = [
                            ''
                            ], 
                        port = 56, 
                        power = openapi_client.models.power.power(), 
                        real_memory = 56, 
                        reason = '', 
                        reason_changed_at = openapi_client.models.v0_0_41_openapi_nodes_resp_nodes_inner_reason_changed_at.v0_0_41_openapi_nodes_resp_nodes_inner_reason_changed_at(
                            infinite = True, 
                            number = 56, 
                            set = True, ), 
                        reason_set_by_user = '', 
                        res_cores_per_gpu = 56, 
                        reservation = '', 
                        resume_after = openapi_client.models.v0_0_41_openapi_nodes_resp_nodes_inner_resume_after.v0_0_41_openapi_nodes_resp_nodes_inner_resume_after(
                            infinite = True, 
                            number = 56, 
                            set = True, ), 
                        slurmd_start_time = openapi_client.models.v0_0_41_openapi_nodes_resp_nodes_inner_slurmd_start_time.v0_0_41_openapi_nodes_resp_nodes_inner_slurmd_start_time(
                            infinite = True, 
                            number = 56, 
                            set = True, ), 
                        sockets = 56, 
                        specialized_cores = 56, 
                        specialized_cpus = '', 
                        specialized_memory = 56, 
                        state = [
                            'INVALID'
                            ], 
                        temporary_disk = 56, 
                        threads = 56, 
                        tres = '', 
                        tres_used = '', 
                        tres_weighted = 1.337, 
                        version = '', 
                        weight = 56, )
                    ],
        )
        """

    def testV0041OpenapiNodesResp(self):
        """Test V0041OpenapiNodesResp"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
