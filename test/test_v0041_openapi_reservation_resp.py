# coding: utf-8

"""
    Slurm REST API

    API to access and control Slurm

    The version of the OpenAPI document: Slurm-24.11.5&openapi/slurmdbd&openapi/slurmctld
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from slurmrest_python_0_0_41.models.v0041_openapi_reservation_resp import V0041OpenapiReservationResp

class TestV0041OpenapiReservationResp(unittest.TestCase):
    """V0041OpenapiReservationResp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V0041OpenapiReservationResp:
        """Test V0041OpenapiReservationResp
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V0041OpenapiReservationResp`
        """
        model = V0041OpenapiReservationResp()
        if include_optional:
            return V0041OpenapiReservationResp(
                errors = [
                    slurmrest_python_0_0_41.models.v0_0_41_openapi_accounts_add_cond_resp_errors_inner.v0_0_41_openapi_accounts_add_cond_resp_errors_inner(
                        description = '', 
                        error = '', 
                        error_number = 56, 
                        source = '', )
                    ],
                last_update = slurmrest_python_0_0_41.models.v0_0_41_openapi_reservation_resp_last_update.v0_0_41_openapi_reservation_resp_last_update(
                    infinite = True, 
                    number = 56, 
                    set = True, ),
                meta = slurmrest_python_0_0_41.models.v0_0_41_openapi_accounts_add_cond_resp_meta.v0_0_41_openapi_accounts_add_cond_resp_meta(
                    client = slurmrest_python_0_0_41.models.v0_0_41_openapi_accounts_add_cond_resp_meta_client.v0_0_41_openapi_accounts_add_cond_resp_meta_client(
                        group = '', 
                        source = '', 
                        user = '', ), 
                    command = [
                        ''
                        ], 
                    plugin = slurmrest_python_0_0_41.models.v0_0_41_openapi_accounts_add_cond_resp_meta_plugin.v0_0_41_openapi_accounts_add_cond_resp_meta_plugin(
                        accounting_storage = '', 
                        data_parser = '', 
                        name = '', 
                        type = '', ), 
                    slurm = slurmrest_python_0_0_41.models.v0_0_41_openapi_accounts_add_cond_resp_meta_slurm.v0_0_41_openapi_accounts_add_cond_resp_meta_slurm(
                        cluster = '', 
                        release = '', 
                        version = slurmrest_python_0_0_41.models.v0_0_41_openapi_accounts_add_cond_resp_meta_slurm_version.v0_0_41_openapi_accounts_add_cond_resp_meta_slurm_version(
                            major = '', 
                            micro = '', 
                            minor = '', ), ), ),
                reservations = [
                    slurmrest_python_0_0_41.models.v0_0_41_openapi_reservation_resp_reservations_inner.v0_0_41_openapi_reservation_resp_reservations_inner(
                        accounts = '', 
                        burst_buffer = '', 
                        core_count = 56, 
                        core_specializations = [
                            slurmrest_python_0_0_41.models.v0_0_41_openapi_reservation_resp_reservations_inner_core_specializations_inner.v0_0_41_openapi_reservation_resp_reservations_inner_core_specializations_inner(
                                core = '', 
                                node = '', )
                            ], 
                        end_time = slurmrest_python_0_0_41.models.v0_0_41_openapi_reservation_resp_reservations_inner_end_time.v0_0_41_openapi_reservation_resp_reservations_inner_end_time(
                            infinite = True, 
                            number = 56, 
                            set = True, ), 
                        features = '', 
                        flags = [
                            'MAINT'
                            ], 
                        groups = '', 
                        licenses = '', 
                        max_start_delay = 56, 
                        name = '', 
                        node_count = 56, 
                        node_list = '', 
                        partition = '', 
                        purge_completed = slurmrest_python_0_0_41.models.v0_0_41_openapi_reservation_resp_reservations_inner_purge_completed.v0_0_41_openapi_reservation_resp_reservations_inner_purge_completed(
                            time = slurmrest_python_0_0_41.models.v0_0_41_openapi_reservation_resp_reservations_inner_purge_completed_time.v0_0_41_openapi_reservation_resp_reservations_inner_purge_completed_time(
                                infinite = True, 
                                number = 56, 
                                set = True, ), ), 
                        start_time = slurmrest_python_0_0_41.models.v0_0_41_openapi_reservation_resp_reservations_inner_start_time.v0_0_41_openapi_reservation_resp_reservations_inner_start_time(
                            infinite = True, 
                            number = 56, 
                            set = True, ), 
                        tres = '', 
                        users = '', 
                        watts = slurmrest_python_0_0_41.models.v0_0_41_openapi_reservation_resp_reservations_inner_watts.v0_0_41_openapi_reservation_resp_reservations_inner_watts(
                            infinite = True, 
                            number = 56, 
                            set = True, ), )
                    ],
                warnings = [
                    slurmrest_python_0_0_41.models.v0_0_41_openapi_accounts_add_cond_resp_warnings_inner.v0_0_41_openapi_accounts_add_cond_resp_warnings_inner(
                        description = '', 
                        source = '', )
                    ]
            )
        else:
            return V0041OpenapiReservationResp(
                last_update = slurmrest_python_0_0_41.models.v0_0_41_openapi_reservation_resp_last_update.v0_0_41_openapi_reservation_resp_last_update(
                    infinite = True, 
                    number = 56, 
                    set = True, ),
                reservations = [
                    slurmrest_python_0_0_41.models.v0_0_41_openapi_reservation_resp_reservations_inner.v0_0_41_openapi_reservation_resp_reservations_inner(
                        accounts = '', 
                        burst_buffer = '', 
                        core_count = 56, 
                        core_specializations = [
                            slurmrest_python_0_0_41.models.v0_0_41_openapi_reservation_resp_reservations_inner_core_specializations_inner.v0_0_41_openapi_reservation_resp_reservations_inner_core_specializations_inner(
                                core = '', 
                                node = '', )
                            ], 
                        end_time = slurmrest_python_0_0_41.models.v0_0_41_openapi_reservation_resp_reservations_inner_end_time.v0_0_41_openapi_reservation_resp_reservations_inner_end_time(
                            infinite = True, 
                            number = 56, 
                            set = True, ), 
                        features = '', 
                        flags = [
                            'MAINT'
                            ], 
                        groups = '', 
                        licenses = '', 
                        max_start_delay = 56, 
                        name = '', 
                        node_count = 56, 
                        node_list = '', 
                        partition = '', 
                        purge_completed = slurmrest_python_0_0_41.models.v0_0_41_openapi_reservation_resp_reservations_inner_purge_completed.v0_0_41_openapi_reservation_resp_reservations_inner_purge_completed(
                            time = slurmrest_python_0_0_41.models.v0_0_41_openapi_reservation_resp_reservations_inner_purge_completed_time.v0_0_41_openapi_reservation_resp_reservations_inner_purge_completed_time(
                                infinite = True, 
                                number = 56, 
                                set = True, ), ), 
                        start_time = slurmrest_python_0_0_41.models.v0_0_41_openapi_reservation_resp_reservations_inner_start_time.v0_0_41_openapi_reservation_resp_reservations_inner_start_time(
                            infinite = True, 
                            number = 56, 
                            set = True, ), 
                        tres = '', 
                        users = '', 
                        watts = slurmrest_python_0_0_41.models.v0_0_41_openapi_reservation_resp_reservations_inner_watts.v0_0_41_openapi_reservation_resp_reservations_inner_watts(
                            infinite = True, 
                            number = 56, 
                            set = True, ), )
                    ],
        )
        """

    def testV0041OpenapiReservationResp(self):
        """Test V0041OpenapiReservationResp"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
