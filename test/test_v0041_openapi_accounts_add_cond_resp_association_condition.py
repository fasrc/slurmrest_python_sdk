# coding: utf-8

"""
    Slurm REST API

    API to access and control Slurm

    The version of the OpenAPI document: Slurm-24.11.5&openapi/slurmdbd&openapi/slurmctld
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.v0041_openapi_accounts_add_cond_resp_association_condition import V0041OpenapiAccountsAddCondRespAssociationCondition

class TestV0041OpenapiAccountsAddCondRespAssociationCondition(unittest.TestCase):
    """V0041OpenapiAccountsAddCondRespAssociationCondition unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V0041OpenapiAccountsAddCondRespAssociationCondition:
        """Test V0041OpenapiAccountsAddCondRespAssociationCondition
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V0041OpenapiAccountsAddCondRespAssociationCondition`
        """
        model = V0041OpenapiAccountsAddCondRespAssociationCondition()
        if include_optional:
            return V0041OpenapiAccountsAddCondRespAssociationCondition(
                accounts = [
                    ''
                    ],
                association = openapi_client.models.v0_0_41_openapi_accounts_add_cond_resp_association_condition_association.v0_0_41_openapi_accounts_add_cond_resp_association_condition_association(
                    comment = '', 
                    defaultqos = '', 
                    fairshare = 56, 
                    grpjobs = openapi_client.models.v0_0_41_openapi_accounts_add_cond_resp_association_condition_association_grpjobs.v0_0_41_openapi_accounts_add_cond_resp_association_condition_association_grpjobs(
                        infinite = True, 
                        number = 56, 
                        set = True, ), 
                    grpjobsaccrue = openapi_client.models.v0_0_41_openapi_accounts_add_cond_resp_association_condition_association_grpjobsaccrue.v0_0_41_openapi_accounts_add_cond_resp_association_condition_association_grpjobsaccrue(
                        infinite = True, 
                        number = 56, 
                        set = True, ), 
                    grpsubmitjobs = openapi_client.models.v0_0_41_openapi_accounts_add_cond_resp_association_condition_association_grpsubmitjobs.v0_0_41_openapi_accounts_add_cond_resp_association_condition_association_grpsubmitjobs(
                        infinite = True, 
                        number = 56, 
                        set = True, ), 
                    grptres = [
                        openapi_client.models.v0_0_41_openapi_accounts_add_cond_resp_association_condition_association_grptres_inner.v0_0_41_openapi_accounts_add_cond_resp_association_condition_association_grptres_inner(
                            count = 56, 
                            id = 56, 
                            name = '', 
                            type = '', )
                        ], 
                    grptresmins = [
                        openapi_client.models.v0_0_41_openapi_accounts_add_cond_resp_association_condition_association_grptres_inner.v0_0_41_openapi_accounts_add_cond_resp_association_condition_association_grptres_inner(
                            count = 56, 
                            id = 56, 
                            name = '', 
                            type = '', )
                        ], 
                    grptresrunmins = [
                        
                        ], 
                    grpwall = openapi_client.models.v0_0_41_openapi_accounts_add_cond_resp_association_condition_association_grpwall.v0_0_41_openapi_accounts_add_cond_resp_association_condition_association_grpwall(
                        infinite = True, 
                        number = 56, 
                        set = True, ), 
                    maxjobs = openapi_client.models.v0_0_41_openapi_accounts_add_cond_resp_association_condition_association_maxjobs.v0_0_41_openapi_accounts_add_cond_resp_association_condition_association_maxjobs(
                        infinite = True, 
                        number = 56, 
                        set = True, ), 
                    maxjobsaccrue = openapi_client.models.v0_0_41_openapi_accounts_add_cond_resp_association_condition_association_maxjobsaccrue.v0_0_41_openapi_accounts_add_cond_resp_association_condition_association_maxjobsaccrue(
                        infinite = True, 
                        number = 56, 
                        set = True, ), 
                    maxsubmitjobs = openapi_client.models.v0_0_41_openapi_accounts_add_cond_resp_association_condition_association_maxsubmitjobs.v0_0_41_openapi_accounts_add_cond_resp_association_condition_association_maxsubmitjobs(
                        infinite = True, 
                        number = 56, 
                        set = True, ), 
                    maxtresminsperjob = [
                        
                        ], 
                    maxtresperjob = [
                        
                        ], 
                    maxtrespernode = [
                        
                        ], 
                    maxtresrunmins = [
                        
                        ], 
                    maxwalldurationperjob = openapi_client.models.v0_0_41_openapi_accounts_add_cond_resp_association_condition_association_maxwalldurationperjob.v0_0_41_openapi_accounts_add_cond_resp_association_condition_association_maxwalldurationperjob(
                        infinite = True, 
                        number = 56, 
                        set = True, ), 
                    minpriothresh = openapi_client.models.v0_0_41_openapi_accounts_add_cond_resp_association_condition_association_minpriothresh.v0_0_41_openapi_accounts_add_cond_resp_association_condition_association_minpriothresh(
                        infinite = True, 
                        number = 56, 
                        set = True, ), 
                    parent = '', 
                    priority = openapi_client.models.v0_0_41_openapi_accounts_add_cond_resp_association_condition_association_priority.v0_0_41_openapi_accounts_add_cond_resp_association_condition_association_priority(
                        infinite = True, 
                        number = 56, 
                        set = True, ), 
                    qoslevel = [
                        ''
                        ], ),
                clusters = [
                    ''
                    ]
            )
        else:
            return V0041OpenapiAccountsAddCondRespAssociationCondition(
                accounts = [
                    ''
                    ],
        )
        """

    def testV0041OpenapiAccountsAddCondRespAssociationCondition(self):
        """Test V0041OpenapiAccountsAddCondRespAssociationCondition"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
