# coding: utf-8

"""
    Slurm REST API

    API to access and control Slurm

    The version of the OpenAPI document: Slurm-24.11.5&openapi/slurmdbd&openapi/slurmctld
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from slurmrest_python_0_0_41.models.v0041_openapi_shares_resp import V0041OpenapiSharesResp

class TestV0041OpenapiSharesResp(unittest.TestCase):
    """V0041OpenapiSharesResp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V0041OpenapiSharesResp:
        """Test V0041OpenapiSharesResp
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V0041OpenapiSharesResp`
        """
        model = V0041OpenapiSharesResp()
        if include_optional:
            return V0041OpenapiSharesResp(
                errors = [
                    slurmrest_python_0_0_41.models.v0_0_41_openapi_accounts_add_cond_resp_errors_inner.v0_0_41_openapi_accounts_add_cond_resp_errors_inner(
                        description = '', 
                        error = '', 
                        error_number = 56, 
                        source = '', )
                    ],
                meta = slurmrest_python_0_0_41.models.v0_0_41_openapi_accounts_add_cond_resp_meta.v0_0_41_openapi_accounts_add_cond_resp_meta(
                    client = slurmrest_python_0_0_41.models.v0_0_41_openapi_accounts_add_cond_resp_meta_client.v0_0_41_openapi_accounts_add_cond_resp_meta_client(
                        group = '', 
                        source = '', 
                        user = '', ), 
                    command = [
                        ''
                        ], 
                    plugin = slurmrest_python_0_0_41.models.v0_0_41_openapi_accounts_add_cond_resp_meta_plugin.v0_0_41_openapi_accounts_add_cond_resp_meta_plugin(
                        accounting_storage = '', 
                        data_parser = '', 
                        name = '', 
                        type = '', ), 
                    slurm = slurmrest_python_0_0_41.models.v0_0_41_openapi_accounts_add_cond_resp_meta_slurm.v0_0_41_openapi_accounts_add_cond_resp_meta_slurm(
                        cluster = '', 
                        release = '', 
                        version = slurmrest_python_0_0_41.models.v0_0_41_openapi_accounts_add_cond_resp_meta_slurm_version.v0_0_41_openapi_accounts_add_cond_resp_meta_slurm_version(
                            major = '', 
                            micro = '', 
                            minor = '', ), ), ),
                shares = slurmrest_python_0_0_41.models.v0_0_41_openapi_shares_resp_shares.v0_0_41_openapi_shares_resp_shares(
                    shares = [
                        slurmrest_python_0_0_41.models.v0_0_41_openapi_shares_resp_shares_shares_inner.v0_0_41_openapi_shares_resp_shares_shares_inner(
                            cluster = '', 
                            effective_usage = 1.337, 
                            fairshare = slurmrest_python_0_0_41.models.v0_0_41_openapi_shares_resp_shares_shares_inner_fairshare.v0_0_41_openapi_shares_resp_shares_shares_inner_fairshare(
                                factor = 1.337, 
                                level = 1.337, ), 
                            id = 56, 
                            name = '', 
                            parent = '', 
                            partition = '', 
                            shares_normalized = slurmrest_python_0_0_41.models.v0_0_41_openapi_shares_resp_shares_shares_inner_shares_normalized.v0_0_41_openapi_shares_resp_shares_shares_inner_shares_normalized(
                                infinite = True, 
                                number = 1.337, 
                                set = True, ), 
                            tres = slurmrest_python_0_0_41.models.v0_0_41_openapi_shares_resp_shares_shares_inner_tres.v0_0_41_openapi_shares_resp_shares_shares_inner_tres(
                                group_minutes = [
                                    slurmrest_python_0_0_41.models.v0_0_41_openapi_shares_resp_shares_shares_inner_tres_group_minutes_inner.v0_0_41_openapi_shares_resp_shares_shares_inner_tres_group_minutes_inner(
                                        name = '', 
                                        value = slurmrest_python_0_0_41.models.v0_0_41_openapi_shares_resp_shares_shares_inner_tres_group_minutes_inner_value.v0_0_41_openapi_shares_resp_shares_shares_inner_tres_group_minutes_inner_value(
                                            infinite = True, 
                                            number = 56, 
                                            set = True, ), )
                                    ], 
                                run_seconds = [
                                    slurmrest_python_0_0_41.models.v0_0_41_openapi_shares_resp_shares_shares_inner_tres_group_minutes_inner.v0_0_41_openapi_shares_resp_shares_shares_inner_tres_group_minutes_inner(
                                        name = '', )
                                    ], 
                                usage = [
                                    slurmrest_python_0_0_41.models.v0_0_41_openapi_shares_resp_shares_shares_inner_tres_usage_inner.v0_0_41_openapi_shares_resp_shares_shares_inner_tres_usage_inner(
                                        name = '', )
                                    ], ), 
                            type = [
                                'USER'
                                ], 
                            usage = 56, 
                            usage_normalized = slurmrest_python_0_0_41.models.v0_0_41_openapi_shares_resp_shares_shares_inner_usage_normalized.v0_0_41_openapi_shares_resp_shares_shares_inner_usage_normalized(
                                infinite = True, 
                                number = 1.337, 
                                set = True, ), )
                        ], 
                    total_shares = 56, ),
                warnings = [
                    slurmrest_python_0_0_41.models.v0_0_41_openapi_accounts_add_cond_resp_warnings_inner.v0_0_41_openapi_accounts_add_cond_resp_warnings_inner(
                        description = '', 
                        source = '', )
                    ]
            )
        else:
            return V0041OpenapiSharesResp(
                shares = slurmrest_python_0_0_41.models.v0_0_41_openapi_shares_resp_shares.v0_0_41_openapi_shares_resp_shares(
                    shares = [
                        slurmrest_python_0_0_41.models.v0_0_41_openapi_shares_resp_shares_shares_inner.v0_0_41_openapi_shares_resp_shares_shares_inner(
                            cluster = '', 
                            effective_usage = 1.337, 
                            fairshare = slurmrest_python_0_0_41.models.v0_0_41_openapi_shares_resp_shares_shares_inner_fairshare.v0_0_41_openapi_shares_resp_shares_shares_inner_fairshare(
                                factor = 1.337, 
                                level = 1.337, ), 
                            id = 56, 
                            name = '', 
                            parent = '', 
                            partition = '', 
                            shares_normalized = slurmrest_python_0_0_41.models.v0_0_41_openapi_shares_resp_shares_shares_inner_shares_normalized.v0_0_41_openapi_shares_resp_shares_shares_inner_shares_normalized(
                                infinite = True, 
                                number = 1.337, 
                                set = True, ), 
                            tres = slurmrest_python_0_0_41.models.v0_0_41_openapi_shares_resp_shares_shares_inner_tres.v0_0_41_openapi_shares_resp_shares_shares_inner_tres(
                                group_minutes = [
                                    slurmrest_python_0_0_41.models.v0_0_41_openapi_shares_resp_shares_shares_inner_tres_group_minutes_inner.v0_0_41_openapi_shares_resp_shares_shares_inner_tres_group_minutes_inner(
                                        name = '', 
                                        value = slurmrest_python_0_0_41.models.v0_0_41_openapi_shares_resp_shares_shares_inner_tres_group_minutes_inner_value.v0_0_41_openapi_shares_resp_shares_shares_inner_tres_group_minutes_inner_value(
                                            infinite = True, 
                                            number = 56, 
                                            set = True, ), )
                                    ], 
                                run_seconds = [
                                    slurmrest_python_0_0_41.models.v0_0_41_openapi_shares_resp_shares_shares_inner_tres_group_minutes_inner.v0_0_41_openapi_shares_resp_shares_shares_inner_tres_group_minutes_inner(
                                        name = '', )
                                    ], 
                                usage = [
                                    slurmrest_python_0_0_41.models.v0_0_41_openapi_shares_resp_shares_shares_inner_tres_usage_inner.v0_0_41_openapi_shares_resp_shares_shares_inner_tres_usage_inner(
                                        name = '', )
                                    ], ), 
                            type = [
                                'USER'
                                ], 
                            usage = 56, 
                            usage_normalized = slurmrest_python_0_0_41.models.v0_0_41_openapi_shares_resp_shares_shares_inner_usage_normalized.v0_0_41_openapi_shares_resp_shares_shares_inner_usage_normalized(
                                infinite = True, 
                                number = 1.337, 
                                set = True, ), )
                        ], 
                    total_shares = 56, ),
        )
        """

    def testV0041OpenapiSharesResp(self):
        """Test V0041OpenapiSharesResp"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
