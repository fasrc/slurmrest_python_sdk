# coding: utf-8

"""
    Slurm REST API

    API to access and control Slurm

    The version of the OpenAPI document: Slurm-24.11.5&openapi/slurmdbd&openapi/slurmctld
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from slurmrest_python_0_0_41.models.v0041_openapi_nodes_resp_nodes_inner import V0041OpenapiNodesRespNodesInner

class TestV0041OpenapiNodesRespNodesInner(unittest.TestCase):
    """V0041OpenapiNodesRespNodesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V0041OpenapiNodesRespNodesInner:
        """Test V0041OpenapiNodesRespNodesInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V0041OpenapiNodesRespNodesInner`
        """
        model = V0041OpenapiNodesRespNodesInner()
        if include_optional:
            return V0041OpenapiNodesRespNodesInner(
                active_features = [
                    ''
                    ],
                address = '',
                alloc_cpus = 56,
                alloc_idle_cpus = 56,
                alloc_memory = 56,
                architecture = '',
                boards = 56,
                boot_time = slurmrest_python_0_0_41.models.v0_0_41_openapi_nodes_resp_nodes_inner_boot_time.v0_0_41_openapi_nodes_resp_nodes_inner_boot_time(
                    infinite = True, 
                    number = 56, 
                    set = True, ),
                burstbuffer_network_address = '',
                cluster_name = '',
                comment = '',
                cores = 56,
                cpu_binding = 56,
                cpu_load = 56,
                cpus = 56,
                effective_cpus = 56,
                energy = slurmrest_python_0_0_41.models.v0_0_41_openapi_nodes_resp_nodes_inner_energy.v0_0_41_openapi_nodes_resp_nodes_inner_energy(
                    average_watts = 56, 
                    base_consumed_energy = 56, 
                    consumed_energy = 56, 
                    current_watts = slurmrest_python_0_0_41.models.v0_0_41_openapi_nodes_resp_nodes_inner_energy_current_watts.v0_0_41_openapi_nodes_resp_nodes_inner_energy_current_watts(
                        infinite = True, 
                        number = 56, 
                        set = True, ), 
                    last_collected = 56, 
                    previous_consumed_energy = 56, ),
                external_sensors = slurmrest_python_0_0_41.models.external_sensors.external_sensors(),
                extra = '',
                features = [
                    ''
                    ],
                free_mem = slurmrest_python_0_0_41.models.v0_0_41_openapi_nodes_resp_nodes_inner_free_mem.v0_0_41_openapi_nodes_resp_nodes_inner_free_mem(
                    infinite = True, 
                    number = 56, 
                    set = True, ),
                gpu_spec = '',
                gres = '',
                gres_drained = '',
                gres_used = '',
                hostname = '',
                instance_id = '',
                instance_type = '',
                last_busy = slurmrest_python_0_0_41.models.v0_0_41_openapi_nodes_resp_nodes_inner_last_busy.v0_0_41_openapi_nodes_resp_nodes_inner_last_busy(
                    infinite = True, 
                    number = 56, 
                    set = True, ),
                mcs_label = '',
                name = '',
                next_state_after_reboot = [
                    'INVALID'
                    ],
                operating_system = '',
                owner = '',
                partitions = [
                    ''
                    ],
                port = 56,
                power = slurmrest_python_0_0_41.models.power.power(),
                real_memory = 56,
                reason = '',
                reason_changed_at = slurmrest_python_0_0_41.models.v0_0_41_openapi_nodes_resp_nodes_inner_reason_changed_at.v0_0_41_openapi_nodes_resp_nodes_inner_reason_changed_at(
                    infinite = True, 
                    number = 56, 
                    set = True, ),
                reason_set_by_user = '',
                res_cores_per_gpu = 56,
                reservation = '',
                resume_after = slurmrest_python_0_0_41.models.v0_0_41_openapi_nodes_resp_nodes_inner_resume_after.v0_0_41_openapi_nodes_resp_nodes_inner_resume_after(
                    infinite = True, 
                    number = 56, 
                    set = True, ),
                slurmd_start_time = slurmrest_python_0_0_41.models.v0_0_41_openapi_nodes_resp_nodes_inner_slurmd_start_time.v0_0_41_openapi_nodes_resp_nodes_inner_slurmd_start_time(
                    infinite = True, 
                    number = 56, 
                    set = True, ),
                sockets = 56,
                specialized_cores = 56,
                specialized_cpus = '',
                specialized_memory = 56,
                state = [
                    'INVALID'
                    ],
                temporary_disk = 56,
                threads = 56,
                tres = '',
                tres_used = '',
                tres_weighted = 1.337,
                version = '',
                weight = 56
            )
        else:
            return V0041OpenapiNodesRespNodesInner(
        )
        """

    def testV0041OpenapiNodesRespNodesInner(self):
        """Test V0041OpenapiNodesRespNodesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
