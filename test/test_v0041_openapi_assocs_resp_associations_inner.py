# coding: utf-8

"""
    Slurm REST API

    API to access and control Slurm

    The version of the OpenAPI document: Slurm-24.11.5&openapi/slurmdbd&openapi/slurmctld
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.v0041_openapi_assocs_resp_associations_inner import V0041OpenapiAssocsRespAssociationsInner

class TestV0041OpenapiAssocsRespAssociationsInner(unittest.TestCase):
    """V0041OpenapiAssocsRespAssociationsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V0041OpenapiAssocsRespAssociationsInner:
        """Test V0041OpenapiAssocsRespAssociationsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V0041OpenapiAssocsRespAssociationsInner`
        """
        model = V0041OpenapiAssocsRespAssociationsInner()
        if include_optional:
            return V0041OpenapiAssocsRespAssociationsInner(
                account = '',
                accounting = [
                    openapi_client.models.v0_0_41_openapi_assocs_resp_associations_inner_accounting_inner.v0_0_41_openapi_assocs_resp_associations_inner_accounting_inner(
                        tres = openapi_client.models.v0_0_41_openapi_assocs_resp_associations_inner_accounting_inner_tres.v0_0_41_openapi_assocs_resp_associations_inner_accounting_inner_TRES(
                            count = 56, 
                            id = 56, 
                            name = '', 
                            type = '', ), 
                        allocated = openapi_client.models.v0_0_41_openapi_assocs_resp_associations_inner_accounting_inner_allocated.v0_0_41_openapi_assocs_resp_associations_inner_accounting_inner_allocated(
                            seconds = 56, ), 
                        id = 56, 
                        start = 56, )
                    ],
                cluster = '',
                comment = '',
                default = openapi_client.models.v0_0_41_openapi_assocs_resp_associations_inner_default.v0_0_41_openapi_assocs_resp_associations_inner_default(
                    qos = '', ),
                flags = [
                    'DELETED'
                    ],
                id = 56,
                is_default = True,
                lineage = '',
                max = openapi_client.models.v0_0_41_openapi_assocs_resp_associations_inner_max.v0_0_41_openapi_assocs_resp_associations_inner_max(
                    jobs = openapi_client.models.v0_0_41_openapi_assocs_resp_associations_inner_max_jobs.v0_0_41_openapi_assocs_resp_associations_inner_max_jobs(
                        accruing = openapi_client.models.v0_0_41_openapi_assocs_resp_associations_inner_max_jobs_accruing.v0_0_41_openapi_assocs_resp_associations_inner_max_jobs_accruing(
                            infinite = True, 
                            number = 56, 
                            set = True, ), 
                        active = openapi_client.models.v0_0_41_openapi_assocs_resp_associations_inner_max_jobs_active.v0_0_41_openapi_assocs_resp_associations_inner_max_jobs_active(
                            infinite = True, 
                            number = 56, 
                            set = True, ), 
                        per = openapi_client.models.v0_0_41_openapi_assocs_resp_associations_inner_max_jobs_per.v0_0_41_openapi_assocs_resp_associations_inner_max_jobs_per(
                            count = openapi_client.models.v0_0_41_openapi_assocs_resp_associations_inner_max_jobs_per_count.v0_0_41_openapi_assocs_resp_associations_inner_max_jobs_per_count(
                                infinite = True, 
                                number = 56, 
                                set = True, ), 
                            submitted = openapi_client.models.v0_0_41_openapi_assocs_resp_associations_inner_max_jobs_per_submitted.v0_0_41_openapi_assocs_resp_associations_inner_max_jobs_per_submitted(
                                infinite = True, 
                                number = 56, 
                                set = True, ), 
                            wall_clock = openapi_client.models.v0_0_41_openapi_assocs_resp_associations_inner_max_jobs_per_wall_clock.v0_0_41_openapi_assocs_resp_associations_inner_max_jobs_per_wall_clock(
                                infinite = True, 
                                number = 56, 
                                set = True, ), ), 
                        total = openapi_client.models.v0_0_41_openapi_assocs_resp_associations_inner_max_jobs_total.v0_0_41_openapi_assocs_resp_associations_inner_max_jobs_total(
                            infinite = True, 
                            number = 56, 
                            set = True, ), ), 
                    per = openapi_client.models.v0_0_41_openapi_assocs_resp_associations_inner_max_per.v0_0_41_openapi_assocs_resp_associations_inner_max_per(
                        account = openapi_client.models.v0_0_41_openapi_assocs_resp_associations_inner_max_per_account.v0_0_41_openapi_assocs_resp_associations_inner_max_per_account(), ), 
                    tres = openapi_client.models.v0_0_41_openapi_assocs_resp_associations_inner_max_tres.v0_0_41_openapi_assocs_resp_associations_inner_max_tres(
                        group = openapi_client.models.v0_0_41_openapi_assocs_resp_associations_inner_max_tres_group.v0_0_41_openapi_assocs_resp_associations_inner_max_tres_group(
                            minutes = [
                                openapi_client.models.v0_0_41_openapi_accounts_add_cond_resp_association_condition_association_grptres_inner.v0_0_41_openapi_accounts_add_cond_resp_association_condition_association_grptres_inner(
                                    id = 56, 
                                    name = '', 
                                    type = '', )
                                ], ), 
                        minutes = openapi_client.models.v0_0_41_openapi_assocs_resp_associations_inner_max_tres_minutes.v0_0_41_openapi_assocs_resp_associations_inner_max_tres_minutes(), ), ),
                min = openapi_client.models.v0_0_41_openapi_assocs_resp_associations_inner_min.v0_0_41_openapi_assocs_resp_associations_inner_min(
                    priority_threshold = openapi_client.models.v0_0_41_openapi_assocs_resp_associations_inner_min_priority_threshold.v0_0_41_openapi_assocs_resp_associations_inner_min_priority_threshold(
                        infinite = True, 
                        number = 56, 
                        set = True, ), ),
                parent_account = '',
                partition = '',
                priority = openapi_client.models.v0_0_41_openapi_accounts_add_cond_resp_association_condition_association_priority.v0_0_41_openapi_accounts_add_cond_resp_association_condition_association_priority(
                    infinite = True, 
                    number = 56, 
                    set = True, ),
                qos = [
                    ''
                    ],
                shares_raw = 56,
                user = ''
            )
        else:
            return V0041OpenapiAssocsRespAssociationsInner(
                user = '',
        )
        """

    def testV0041OpenapiAssocsRespAssociationsInner(self):
        """Test V0041OpenapiAssocsRespAssociationsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
